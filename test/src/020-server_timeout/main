
cvmfs_test_name="Server Timeout"

cvmfs_run_test() {
  logfile=$1
  local scratch_dir=$(pwd)
  local repo_pub="/srv/cvmfs/$CVMFS_TEST_REPO"
  local retcode=0 # after changing global configuration stuff we DONT WANT
                  # to return from somewhere... save the retcode in the error
                  # case and reset the configuration at the end of the script

  echo "create a dummy repository named $CVMFS_TEST_REPO with user $CVMFS_TEST_USER" >> $logfile
  create_filled_repo $CVMFS_TEST_REPO $CVMFS_TEST_USER >> $logfile 2>&1 || return $?

  echo "unmounting $CVMFS_TEST_REPO" >> $logfile
  sudo umount $(mount | grep ".*/$CVMFS_TEST_REPO" | awk '{print $3}' | tac)

  echo "stopping apache" >> $logfile
  apache_switch off >> $logfile 2>&1 || return 2


  echo "starting local webserver" >> $logfile
  httpd_pid=$(start_perl_service httpd --root $repo_pub --index-of --all --port 8080 --timeout)

  echo "starting local web proxy" >> $logfile
  proxy_pid=$(start_perl_service webproxy --port 3128 --backend http://127.0.0.1:8080)


  echo "configure cvmfs for the test case" >> $logfile
  global_test_config_file=$scratch_dir/global.conf
  repo_test_config_file=$scratch_dir/repo.conf

  cat > $global_test_config_file << EOF
CVMFS_REPOSITORIES=$CVMFS_TEST_REPO
CVMFS_TIMEOUT=10
CVMFS_TIMEOUT_DIRECT=5
CVMFS_QUOTA_LIMIT=8000
CVMFS_DEBUGLOG=/tmp/cvmfsdebug.log
EOF
  cat > $repo_test_config_file << EOF
CVMFS_SERVER_URL=http://127.0.0.1:8080
CVMFS_PUBLIC_KEY=/etc/cvmfs/keys/$CVMFS_TEST_REPO.pub
CVMFS_HTTP_PROXY=http://127.0.0.1:3128
EOF

  echo "mount $CVMFS_TEST_REPO using the test infrastructure" >> $logfile
  seconds=$(stop_watch "sudo cvmfs2 -d -o config=$global_test_config_file:$repo_test_config_file $CVMFS_TEST_REPO /cvmfs/$CVMFS_TEST_REPO >> $logfile 2>&1")
  cvmfs_retcode=$?
  # repository should not be mounted successfully
  if [ "$cvmfs_retcode" -eq 0 ]; then
    echo "------> NOTE: cvmfs was unexpectedly mounted successfully! It should have failed." >> $logfile
    retcode=104
  else
    if [ "$cvmfs_retcode" -ne 16 ]; then
      echo "------> NOTE: cvmfs failed to mount but the abort code was not 16 as expected!" >> $logfile
      retcode=104
    fi

    # check if timeout took approx. the expected number of seconds
    if [ "$seconds" -le 18 ] || [ "$seconds" -ge 22 ]; then
      echo "------> NOTE: cvmfs failed but the timeout was unsual: took $seconds seconds to fail..." >> $logfile
      retcode=103
    fi
  fi


  echo "unmounting our homebrew repository (which was basically never mounted)" >> $logfile
  sudo umount /cvmfs/$CVMFS_TEST_REPO >> $logfile 2>&1
  # check if we unmounted successfully (which would be strange here)
  if [ $? -eq 0 ]; then
    echo "------> NOTE: unmounted cvmfs repository successfully... should have failed!" >> $logfile
    retcode=102
  fi

  echo "killing perl services" >> $logfile
  kill_perl_service $proxy_pid >> $logfile 2>&1
  kill_perl_service $httpd_pid >> $logfile 2>&1

  echo "restart apache" >> $logfile
  apache_switch on >> $logfile 2>&1 || return 3
  
  return $retcode
}
