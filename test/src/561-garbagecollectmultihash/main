#!/bin/bash

cvmfs_test_name="Garbage Collection With Multiple Hash Algorithms"
cvmfs_test_autofs_on_startup=false

inflate_file() {
  local destination_file=$1
  local source_file=$2
  local desired_file_size=$3

  touch $destination_file
  while [ $(stat -c %s $destination_file) -lt $desired_file_size ]; do
    cat $source_file >> $destination_file
  done
}

produce_files_1_in() {
  local working_dir=$1
  pushdir $working_dir

  mkdir dir1
  mkdir dir1/sub1
  touch dir1/sub1/.cvmfscatalog
  mkdir dir1/sub2
  touch dir1/sub2/.cvmfscatalog
  mkdir dir1/sub3
  touch dir1/sub3/.cvmfscatalog

  touch dir1/shakespeare
  echo "That thou art blamed shall not be thy defect,"       >> dir1/shakespeare
  echo "For slander's mark was ever yet the fair;"           >> dir1/shakespeare
  echo "The ornament of beauty is suspect,"                  >> dir1/shakespeare
  echo "A crow that flies in heaven's sweetest air."         >> dir1/shakespeare
  echo "So thou be good, slander doth but approve"           >> dir1/shakespeare
  echo "Thy worth the greater, being wooed of time;"         >> dir1/shakespeare
  echo "For canker vice the sweetest buds doth love,"        >> dir1/shakespeare
  echo "And thou present'st a pure unstained prime."         >> dir1/shakespeare
  echo "Thou hast passed by the ambush of young days"        >> dir1/shakespeare
  echo "Either not assailed, or victor being charged;"       >> dir1/shakespeare
  echo "Yet this thy praise cannot be so thy praise,"        >> dir1/shakespeare
  echo "To tie up envy, evermore enlarged,"                  >> dir1/shakespeare
  echo "   If some suspect of ill masked not thy show,"      >> dir1/shakespeare
  echo "   Then thou alone kingdoms of hearts shouldst owe." >> dir1/shakespeare

  touch dir1/sub1/many_shakespeares
  touch dir1/sub2/alotof_shakespeares
  touch dir1/sub3/shakespeare_army
  inflate_file dir1/sub1/many_shakespeares dir1/shakespeare              1000000
  inflate_file dir1/sub2/alotof_shakespeares dir1/sub1/many_shakespeares 10000000
  inflate_file dir1/sub3/shakespeare_army dir1/sub2/alotof_shakespeares  50000000

  popdir
}

produce_files_2_in() {
  local working_dir=$1
  pushdir $working_dir

  mkdir dir2
  mkdir dir2/sub1
  touch dir2/sub1/.cvmfscatalog
  mkdir dir2/sub2
  touch dir2/sub2/.cvmfscatalog
  mkdir dir2/sub3
  touch dir2/sub3/.cvmfscatalog

  cp_bin dir2/sub1
  cp_bin dir2/sub2
  cp_bin dir2/sub3

  touch dir1/sub1/warfield
  echo "Our life is like a thorny rose"                                                   >> dir1/sub1/warfield
  echo "Not perfect, but always beautiful"                                                >> dir1/sub1/warfield
  echo "The thorns represent the hardships in our lives. "                                >> dir1/sub1/warfield
  echo "The delicate red petals represent the fun and beautiful things in our .........." >> dir1/sub1/warfield

  touch dir1/sub2/jackson
  echo "Didn't want a battle,"                                >> dir1/sub2/jackson
  echo "Yet you declared war,"                                >> dir1/sub2/jackson
  echo "Each knock you gave me made me stronger than before," >> dir1/sub2/jackson
  echo "I will not give up,"                                  >> dir1/sub2/jackson
  echo "I will not give in,"                                  >> dir1/sub2/jackson
  echo "You won't make me fall,"                              >> dir1/sub2/jackson
  echo "I won't let you win."                                 >> dir1/sub2/jackson

  popdir
}

produce_files_3_in() {
  local working_dir=$1
  pushdir $working_dir

  mkdir dir3
  cp_bin dir3

  mkdir dir3/sub1
  touch dir3/sub1/.cvmfscatalog
  mkdir dir3/sub2
  touch dir3/sub2/.cvmfscatalog
  mkdir dir3/sub3
  touch dir3/sub3/.cvmfscatalog

  touch dir3/kafka
  echo "Deeply lost in the night."                                   >> dir3/kafka
  echo ""                                                            >> dir3/kafka
  echo "Just as one sometimes lowers one's head to reflect, "        >> dir3/kafka
  echo "thus to be utterly lost in the night. "                      >> dir3/kafka
  echo "All around people are asleep. It's just play acting, "       >> dir3/kafka
  echo "an innocent self-deception, that they sleep in houses, "     >> dir3/kafka
  echo "in safe beds, under a safe roof, stretched out or "          >> dir3/kafka
  echo "curled up on mattresses, in sheets, under blankets; "        >> dir3/kafka
  echo "in reality they have flocked together as they had once "     >> dir3/kafka
  echo "upon a time and again later in a deserted region, a camp "   >> dir3/kafka
  echo "in the open, a countless number of men, an army, a people, " >> dir3/kafka
  echo "under a cold sky on cold earth, collapsed where once they "  >> dir3/kafka
  echo "had stood, forehead pressed on the arm, face to the "        >> dir3/kafka
  echo "ground, breathing quietly."                                  >> dir3/kafka
  echo ""                                                            >> dir3/kafka
  echo "And you are watching, are one of the watchmen, you find "    >> dir3/kafka
  echo "the next one by brandishing a burning stick from the "       >> dir3/kafka
  echo "brushwood pile beside you."                                  >> dir3/kafka
  echo ""                                                            >> dir3/kafka
  echo "Why are you watching?"                                       >> dir3/kafka
  echo ""                                                            >> dir3/kafka
  echo "Someone must watch, it is said. Someone must be there."      >> dir3/kafka

  touch dir3/sub1/many_kafkas
  touch dir3/sub2/alotof_kafkas
  touch dir3/sub3/kafka_army
  inflate_file dir3/sub1/many_kafkas dir3/kafka              1000000
  inflate_file dir3/sub2/alotof_kafkas dir3/sub1/many_kafkas 10000000
  inflate_file dir3/sub3/kafka_army dir3/sub2/alotof_kafkas  50000000

  rm -f dir2/sub1/*

  touch dir2/sub1/tharrington
  echo "Forever we remain oblivious to the future, "    >> dir2/sub1/tharrington
  echo "lost to the past and enduring our torture. "    >> dir2/sub1/tharrington
  echo "Forever we take chances to settle our scores, " >> dir2/sub1/tharrington
  echo "losing some battles and winning some wars. "    >> dir2/sub1/tharrington
  echo "Forever .........."                             >> dir2/sub1/tharrington

  rm -fR dir1

  popdir
}

produce_files_4_in() {
  local working_dir=$1
  pushdir $working_dir

  rm -fR dir3

  popdir
}

cvmfs_run_test() {
  local logfile=$1
  local script_location=$2
  local scratch_dir=$(pwd)
  local repo_dir=/cvmfs/$CVMFS_TEST_REPO

  mkdir reference_dir1
  mkdir reference_dir2
  mkdir reference_dir3
  mkdir reference_dir4
  local reference_dir1=$scratch_dir/reference_dir1
  local reference_dir2=$scratch_dir/reference_dir2
  local reference_dir3=$scratch_dir/reference_dir3
  local reference_dir4=$scratch_dir/reference_dir4

  local root_clg_0=""
  local root_clg_1=""
  local root_clg_2=""
  local root_clg_3=""
  local root_clg_4=""
  local root_clg_5=""

  echo "create a fresh repository named $CVMFS_TEST_REPO with user $CVMFS_TEST_USER and disabled auto-tagging"
  create_empty_repo $CVMFS_TEST_REPO $CVMFS_TEST_USER NO -g -z || return $?
  root_clg_0="$(get_current_root_catalog $CVMFS_TEST_REPO)"

  local gc_log="${scratch_dir}/gc.log"
  echo "disable automatic garbage collection and enable GC logging ($gc_log)"
  disable_auto_garbage_collection $CVMFS_TEST_REPO || return $?
  echo "CVMFS_GC_DELETION_LOG=$gc_log" | sudo tee -a "/etc/cvmfs/repositories.d/${CVMFS_TEST_REPO}/server.conf" || return 100

  # ============================================================================

  echo "starting transaction to edit repository (1)"
  start_transaction $CVMFS_TEST_REPO || return $?

  echo "putting some stuff in the new repository"
  produce_files_1_in $repo_dir || return 1

  echo "putting exactly the same stuff in the scratch spaces for comparison"
  produce_files_1_in $reference_dir1 || return 2

  echo "creating CVMFS snapshot"
  publish_repo $CVMFS_TEST_REPO > publish_1.log 2>&1 || return $?
  root_clg_1="$(get_current_root_catalog $CVMFS_TEST_REPO)"

  echo "compare the results of cvmfs to our reference copy"
  compare_directories $repo_dir $reference_dir1 || return $?

  # ============================================================================

  echo "change the hash algorithm for this repository"
  sudo sed -i "s/^\(CVMFS_HASH_ALGORITHM\)=.*\$/\1=rmd160/" /etc/cvmfs/repositories.d/${CVMFS_TEST_REPO}/server.conf

  # ============================================================================

  echo "starting transaction to edit repository (2)"
  start_transaction $CVMFS_TEST_REPO || return $?

  echo "putting some stuff in the new repository"
  produce_files_2_in $repo_dir || return 3

  echo "putting exactly the same stuff in the scratch spaces for comparison"
  produce_files_1_in $reference_dir2 || return 4
  produce_files_2_in $reference_dir2 || return 4

  echo "creating CVMFS snapshot"
  publish_repo $CVMFS_TEST_REPO > publish_2.log 2>&1 || return $?
  root_clg_2="$(get_current_root_catalog $CVMFS_TEST_REPO)"

  echo "compare the results of cvmfs to our reference copy"
  compare_directories $repo_dir $reference_dir2 || return $?

  # ============================================================================

  echo "starting transaction to edit repository (3)"
  start_transaction $CVMFS_TEST_REPO || return $?

  echo "putting some stuff in the new repository"
  produce_files_3_in $repo_dir || return 5

  echo "putting exactly the same stuff in the scratch spaces for comparison"
  produce_files_1_in $reference_dir3 || return 6
  produce_files_2_in $reference_dir3 || return 6
  produce_files_3_in $reference_dir3 || return 6

  echo "creating CVMFS snapshot"
  publish_repo $CVMFS_TEST_REPO > publish_3.log 2>&1 || return $?
  root_clg_3="$(get_current_root_catalog $CVMFS_TEST_REPO)"

  echo "compare the results of cvmfs to our reference copy"
  compare_directories $repo_dir $reference_dir3 || return $?

  # ============================================================================

  echo "starting transaction to edit repository (4)"
  start_transaction $CVMFS_TEST_REPO || return $?

  echo "putting some stuff in the new repository"
  produce_files_4_in $repo_dir || return 7

  echo "putting exactly the same stuff in the scratch spaces for comparison"
  produce_files_1_in $reference_dir4 || return 8
  produce_files_2_in $reference_dir4 || return 8
  produce_files_3_in $reference_dir4 || return 8
  produce_files_4_in $reference_dir4 || return 8

  echo "creating CVMFS snapshot"
  publish_repo $CVMFS_TEST_REPO > publish_4.log 2>&1 || return $?
  root_clg_4="$(get_current_root_catalog $CVMFS_TEST_REPO)"

  echo "compare the results of cvmfs to our reference copy"
  compare_directories $repo_dir $reference_dir4 || return $?

  # ============================================================================

  local shakespeare_object="5ccb03a6d732ff70310ba5db25756a6cd4675710"
  local chopped_shakespeare_1="f58287c6c5a608d70491519d4f3dc3b3436b607aP"
  local chopped_shakespeare_2="1e3618d857695eab0e30da35fcd9ea5e3f52f266P"
  local chopped_shakespeare_3="c3cc8c92d5ea75da3207498fae45123b8a172d21P"
  local kafka_object="865f29a051bf7999651fa565d018287e99cf20d2-rmd160"
  local chopped_kafka_1="ca4073bce64b85a7c1eb4561902d673a7c10b7c2-rmd160P"
  local chopped_kafka_2="736976b3fcb9f78a220150272051fda532ce2985-rmd160P"
  local chopped_kafka_3="b99b4fea75c70758bbcad17b2aaad0624168cdb6-rmd160P"
  echo "check if poem objects are there ($shakespeare_object)..."
  peek_backend $CVMFS_TEST_REPO $shakespeare_object || return 9
  peek_backend $CVMFS_TEST_REPO $kafka_object       || return 9

  echo "check if the file chunks are there"
  peek_backend $CVMFS_TEST_REPO $chopped_shakespeare_1 || return 9
  peek_backend $CVMFS_TEST_REPO $chopped_shakespeare_2 || return 9
  peek_backend $CVMFS_TEST_REPO $chopped_shakespeare_3 || return 9
  peek_backend $CVMFS_TEST_REPO $chopped_kafka_1       || return 9
  peek_backend $CVMFS_TEST_REPO $chopped_kafka_2       || return 9
  peek_backend $CVMFS_TEST_REPO $chopped_kafka_3       || return 9

  echo "check if all catalog revisions are still there"
  for clg_hash in $root_clg_0 $root_clg_1 $root_clg_2 $root_clg_3 $root_clg_4; do
    peek_backend $CVMFS_TEST_REPO ${clg_hash}C || return 10
  done

  echo "perform basic garbage collection"
  cvmfs_server gc -r0 -f $CVMFS_TEST_REPO || return 11

  echo "check if shakespeare is gone"
  peek_backend $CVMFS_TEST_REPO $shakespeare_object    && return 12
  peek_backend $CVMFS_TEST_REPO $chopped_shakespeare_1 && return 12
  peek_backend $CVMFS_TEST_REPO $chopped_shakespeare_2 && return 12
  peek_backend $CVMFS_TEST_REPO $chopped_shakespeare_3 && return 12

  echo "check that deletion log contains shakespeare"
  cat $gc_log | grep -q $shakespeare_object    || return 12
  cat $gc_log | grep -q $chopped_shakespeare_1 || return 12
  cat $gc_log | grep -q $chopped_shakespeare_2 || return 12
  cat $gc_log | grep -q $chopped_shakespeare_3 || return 12

  echo "check if kafka is still there"
  peek_backend $CVMFS_TEST_REPO $kafka_object    || return 13
  peek_backend $CVMFS_TEST_REPO $chopped_kafka_1 || return 13
  peek_backend $CVMFS_TEST_REPO $chopped_kafka_2 || return 13
  peek_backend $CVMFS_TEST_REPO $chopped_kafka_3 || return 13

  echo "check that deletion log doesn't contain kafka"
  cat $gc_log | grep -q $kafka_object    && return 13
  cat $gc_log | grep -q $chopped_kafka_1 && return 13
  cat $gc_log | grep -q $chopped_kafka_2 && return 13
  cat $gc_log | grep -q $chopped_kafka_3 && return 13

  echo "check if the catalog revisions 1-4 are gone"
  for clg_hash in $root_clg_0 $root_clg_1 $root_clg_2; do
    peek_backend $CVMFS_TEST_REPO ${clg_hash}C && return 14
  done

  echo "check if the catalog revisions 5-6 are preserved"
  for clg_hash in $root_clg_3 $root_clg_4; do
    peek_backend $CVMFS_TEST_REPO ${clg_hash}C || return 15
  done

  # ============================================================================

  echo "create an additional revision"
  start_transaction $CVMFS_TEST_REPO || return 16
  publish_repo $CVMFS_TEST_REPO > publish_5.log 2>&1 || return 17
  root_clg_5="$(get_current_root_catalog $CVMFS_TEST_REPO)"

  local manual_gc_log="${scratch_dir}/manual.gc.log"
  echo "perform another garbage collection (should remove kafka) (logging to $manual_gc_log)"
  cvmfs_server gc -r0 -fL $manual_gc_log $CVMFS_TEST_REPO || return 18

  echo "check if kafka is gone"
  peek_backend $CVMFS_TEST_REPO $kafka_object    && return 19
  peek_backend $CVMFS_TEST_REPO $chopped_kafka_1 && return 19
  peek_backend $CVMFS_TEST_REPO $chopped_kafka_2 && return 19
  peek_backend $CVMFS_TEST_REPO $chopped_kafka_3 && return 19

  echo "check if kafka is in the manual deletion"
  cat $manual_gc_log | grep -q $kafka_object    || return 19
  cat $manual_gc_log | grep -q $chopped_kafka_1 || return 19
  cat $manual_gc_log | grep -q $chopped_kafka_2 || return 19
  cat $manual_gc_log | grep -q $chopped_kafka_3 || return 19

  echo "check that shakespeare is not in the manual deletion log"
  cat $manual_gc_log | grep -q $shakespeare_object    && return 20
  cat $manual_gc_log | grep -q $chopped_shakespeare_1 && return 20
  cat $manual_gc_log | grep -q $chopped_shakespeare_2 && return 20
  cat $manual_gc_log | grep -q $chopped_shakespeare_3 && return 20

  echo "check if the catalog revisions 1-5 are gone"
  for clg_hash in $root_clg_0 $root_clg_1 $root_clg_2 $root_clg_3; do
    peek_backend $CVMFS_TEST_REPO ${clg_hash}C && return 21
  done

  echo "check if the catalog revisions 6-7 are preserved"
  for clg_hash in $root_clg_4 $root_clg_5; do
    peek_backend $CVMFS_TEST_REPO ${clg_hash}C || return 22
  done

  # ============================================================================

  echo "check if the repository is still sane"
  check_repository $CVMFS_TEST_REPO -i || return 23

  echo "check if the repository's previous revision is still sane"
  check_repository $CVMFS_TEST_REPO -i -t trunk-previous || return 24

  return 0
}
