#!/bin/sh
# postinst script for cvmfs-release
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
	codename=$(lsb_release -sc)
	repolist=/usr/share/cvmfs-release/cernvm.list.${codename}
	mkdir -p /etc/apt/sources.list.d
	if [ -f $repolist ]; then
	  ln -f -s $repolist /etc/apt/sources.list.d/cernvm.list
	else
		version_major=$(lsb_release -sr | cut -d. -f1)
		fallback_release=
		if [ $version_major -ge 22 ]; then
			echo "Warning: this distribution is not supported. Using Ubuntu 22.04 packages as fallback."
			fallback_release=jammy
		elif [ $version_major -ge 20 ]; then
			echo "Warning: this distribution is not supported. Using Ubuntu 20.04 packages as fallback."
			fallback_release=focal
		elif [ $version_major -ge 18 ]; then
			echo "Warning: this distribution is not supported. Using Ubuntu 18.04 packages as fallback."
			fallback_release=bionic
		else
			echo "Warning: this distribution is not supported. Using Ubuntu 16.04 packages as fallback."
			fallback_release=xenial
		fi
		ln -f -s /usr/share/cvmfs-release/cernvm.list.$fallback_release \
	        /etc/apt/sources.list.d/cernvm.list
	fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
