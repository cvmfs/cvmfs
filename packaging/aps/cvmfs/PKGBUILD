# Maintainer: Jakob Blomer <jblomer@cern.ch>

pkgname=('cvmfs' 'cvmfs-server' 'cvmfs-devel' 'cvmfs-shrinkwrap' 'cvmfs-unittests')
pkgver=2.6.0
pkgrel=1
pkgdesc="A fuse based network file system developed to deliver software distributions in a fast, scalable, and reliable way."
arch=('x86_64' 'i686')
url='https://cernvm.cern.ch'
license=('BSD')
depends=('libutil-linux' 'fuse' 'attr' 'openssl' 'python' 'curl' 'autofs' 'gdb'
         'cvmfs-config')
makedepends=('valgrind' 'cmake' 'unzip')
source=("https://ecsft.cern.ch/dist/cvmfs/cvmfs-$pkgver/cvmfs-$pkgver.tar.gz")
options=('!strip' 'emptydirs')

prepare() {
  :
}

build() {
  cd "$srcdir/$pkgname-$pkgver"
  cmake -DBUILD_SERVER=yes \
    -DBUILD_SERVER_DEBUG=yes \
    -DBUILD_LIBCVMFS=yes \
    -DBUILD_LIBCVMFS_CACHE=yes \
    -DBUILD_SHRINKWRAP=yes \
    -DBUILD_UNITTESTS=yes \
    -DINSTALL_UNITTESTS=yes
  make -j $(nproc)
}

check() {
  cd "$srcdir/$pkgname-$pkgver"
  make check
}


_remove_keys_and_config() {
  local pkgdir="$1"

  rm -rf "$pkgdir/etc/cvmfs/keys"
  rm -rf "$pkgdir/etc/cvmfs/config.d"
  rm -rf "$pkgdir/etc/cvmfs/domain.d"
  rm -rf "$pkgdir/etc/cvmfs/default.d/50-cern.conf"
  rm -rf "$pkgdir/etc/cvmfs/default.d/60-egi.conf"
  rm -f "$pkgdir/etc/cvmfs/serverorder.sh"
}


_remove_client() {
  local pkgdir="$1"

  _remove_keys_and_config "$pkgdir"
  for client_bin in cvmfs2 cvmfs_talk cvmfs_fsck cvmfs_config mount.cvmfs; do
    rm -f "$pkgdir/usr/bin/$client_bin"
  done
  rm -f "$pkgdir/etc/cvmfs/config.sh" "$pkgdir/etc/autofs/auto.cvmfs" \
    "$pkgdir/etc/cvmfs/default.conf"
  rm -f "$pkgdir/usr/lib/libcvmfs_fuse.so" \
    "$pkgdir/usr/lib/libcvmfs_fuse.so.$pkgver" \
    "$pkgdir/usr/lib/libcvmfs_fuse_debug.so" \
    "$pkgdir/usr/lib/libcvmfs_fuse_debug.so.$pkgver" \
    "$pkgdir/usr/lib/libcvmfs_fuse3.so" \
    "$pkgdir/usr/lib/libcvmfs_fuse3.so.$pkgver" \
    "$pkgdir/usr/lib/libcvmfs_fuse3_debug.so" \
    "$pkgdir/usr/lib/libcvmfs_fuse3_debug.so.$pkgver" \
    "$pkgdir/usr/lib/libcvmfs_fuse_stub.so" \
    "$pkgdir/usr/lib/libcvmfs_fuse_stub.so.$pkgver" \
    "$pkgdir/usr/lib/libcvmfs_fuse3_stub.so" \
    "$pkgdir/usr/lib/libcvmfs_fuse3_stub.so.$pkgver"
  rm -rf "$pkgdir/etc/cvmfs/default.d" "$pkgdir/usr/lib/cvmfs" \
    "$pkgdir/etc/bash_completion.d"
}


_remove_server() {
  local pkgdir="$1"

  rm -f "$pkgdir/etc/cvmfs/cvmfs_server_hooks.sh.demo"
  rm -rf "$pkgdir/usr/share/cvmfs-server" "$pkgdir/var/lib/cvmfs-server" \
    "$pkgdir/var/www" "$pkgdir/var/spool"
  for server_bin in cvmfs_server cvmfs_swissknife cvmfs_swissknife_debug \
    cvmfs_suid_helper cvmfs_rsync
  do
    rm -f "$pkgdir/usr/bin/$server_bin"
  done
  rm -f "$pkgdir/usr/lib/libcvmfs_server.so" \
    "$pkgdir/usr/lib/libcvmfs_server.so.$pkgver"
}


_remove_shrinkwrap() {
  local pkgdir="$1"

  rm -f "$pkgdir/usr/bin/cvmfs_shrinkwrap"
  rm -rf "$pkgdir/usr/lib/cvmfs/shrinkwrap"
}


_remove_devel() {
  local pkgdir="$1"

  rm -f "$pkgdir/usr/lib/libcvmfs.a" "$pkgdir/usr/include/libcvmfs.h" \
    "$pkgdir/usr/lib/libcvmfs_cache.a" "$pkgdir/usr/include/libcvmfs_cache.h"
  rmdir "$pkgdir/usr/include"
}


_remove_unittests() {
  local pkgdir="$1"

  rm -f "$pkgdir/usr/bin/cvmfs_unittests" \
    "$pkgdir/usr/bin/cvmfs_test_cache" \
    "$pkgdir/usr/bin/cvmfs_test_shrinkwrap" \
    "$pkgdir/usr/bin/cvmfs_test_publish"
}


package_cvmfs() {
  install=cvmfs.install

  cd "$srcdir/$pkgname-$pkgver"
  mkdir -p "$pkgdir/etc/autofs"
  make -j $(nproc) DESTDIR="$pkgdir/" install

  _remove_keys_and_config "$pkgdir"
  mkdir -p "$pkgdir/cvmfs"
  mkdir -p "$pkgdir/var/lib/cvmfs"
  mkdir -p "$pkgdir/etc/cvmfs/keys"
  mkdir -p "$pkgdir/etc/cvmfs/config.d"
  mkdir -p "$pkgdir/etc/cvmfs/domain.d"
  mv "$pkgdir/usr/share/doc/cvmfs-$pkgver" "$pkgdir/usr/share/doc/cvmfs"
  rm -rf "$pkgdir/etc/bash_completion.d"
  _remove_server "$pkgdir"
  _remove_shrinkwrap "$pkgdir"
  _remove_devel "$pkgdir"
  _remove_unittests "$pkgdir"
}


package_cvmfs-server() {
  pkgdesc="CernVM-FS tools to maintain Stratum 0/1 repositories"
  makedepends=('cmake' 'unzip')
  depends=('curl' 'attr' 'openssl' 'apache' 'libcap' 'lsof' 'rsync' 'jq' 'usbutils' 'sqlite')
  optdepends=('mod_wsgi: support for stratum 1 GeoAPI')
  install=cvmfs-server.install

  cd "$srcdir/cvmfs-$pkgver"
  make -j $(nproc) DESTDIR="$pkgdir/" install

  mkdir -p "$pkgdir/etc/cvmfs/repositories.d"
  mv "$pkgdir/usr/share/doc/cvmfs-$pkgver" "$pkgdir/usr/share/doc/cvmfs-server"
  _remove_client "$pkgdir"
  _remove_devel "$pkgdir"
  _remove_shrinkwrap "$pkgdir"
  _remove_unittests "$pkgdir"
}


package_cvmfs-devel() {
  pkgdesc="CernVM-FS static client library for repository access without fuse"
  depends=('openssl')
  options=('staticlibs' '!strip' '!emptydirs')

  cd "$srcdir/cvmfs-$pkgver"
  make -j $(nproc) DESTDIR="$pkgdir/" install

  mv "$pkgdir/usr/share/doc/cvmfs-$pkgver" "$pkgdir/usr/share/doc/cvmfs-devel"
  _remove_client "$pkgdir"
  _remove_server "$pkgdir"
  _remove_shrinkwrap "$pkgdir"
  _remove_unittests "$pkgdir"
}


package_cvmfs-shrinkwrap() {
  pkgdesc="CernVM-FS shrinkwrap utility to export /cvmfs file system trees"
  depends=('openssl')
  options=('!strip' '!emptydirs')

  cd "$srcdir/cvmfs-$pkgver"
  make -j $(nproc) DESTDIR="$pkgdir/" install

  mv "$pkgdir/usr/share/doc/cvmfs-$pkgver" "$pkgdir/usr/share/doc/cvmfs-shrinkwrap"
  _remove_client "$pkgdir"
  _remove_server "$pkgdir"
  _remove_devel "$pkgdir"
  _remove_unittests "$pkgdir"
}


package_cvmfs-unittests() {
  pkgdesc="CernVM-FS unit tests binary, testing only"
  options=('!strip' '!emptydirs')

  cd "$srcdir/cvmfs-$pkgver"
  make -j $(nproc) DESTDIR="$pkgdir/" install

  rm -rf "$pkgdir/usr/share/doc/cvmfs-$pkgver"
  _remove_client "$pkgdir"
  _remove_server "$pkgdir"
  _remove_shrinkwrap "$pkgdir"
  _remove_devel "$pkgdir"
}
