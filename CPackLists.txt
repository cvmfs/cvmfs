#
# set the version of the package equal to the version
# in CMakeLists.txt
#
set (CPACK_PACKAGE_VERSION_MAJOR ${CernVM-FS_VERSION_MAJOR})
set (CPACK_PACKAGE_VERSION_MINOR ${CernVM-FS_VERSION_MINOR})
set (CPACK_PACKAGE_VERSION_PATCH ${CernVM-FS_VERSION_PATCH})
set (CPACK_PACKAGE_NAME ${CMAKE_PROJECT_NAME})
set (CPACK_PACKAGE_VENDOR "CERN")
set (CPACK_PACKAGE_CONTACT "cernvm.support@cern.ch")

#
# configure the source .tar.gz
#

set (CPACK_SOURCE_GENERATOR "TGZ")
set (CPACK_SOURCE_PACKAGE_FILE_NAME "${CMAKE_PROJECT_NAME}-${CernVM-FS_VERSION_STRING}")
set (CPACK_SOURCE_IGNORE_FILES
		"taint\\\\.sh$"
		"untaint\\\\.sh$"
		"\\\\.svn"
		".*\\\\.a$"
		".*\\\\.dylib"
		".*\\\\.o"
)

#
# configure binary distributions
#

set (CPACK_GENERATOR TGZ)

set (CPACK_SET_DESTDIR true)
set (CPACK_INSTALL_PREFIX "/usr")

if (MACOSX)
	set (CPACK_GENERATOR ${CPACK_GENERATOR} PackageMaker) # Mac OS X pkg-package
else (MACOSX)
	set (CPACK_GENERATOR ${CPACK_GENERATOR} DEB)          # Debian .deb-package
endif (MACOSX)

set (CPACK_PACKAGE_DESCRIPTION_FILE ${CMAKE_SOURCE_DIR}/InstallerResources/Readme.txt)
set (CPACK_PACKAGE_DESCRIPTION_SUMMARY "CernVM-FS is a read only distributed file system.")
set (CPACK_RESOURCE_FILE_LICENSE ${CMAKE_SOURCE_DIR}/InstallerResources/License.txt)
set (CPACK_RESOURCE_FILE_README ${CMAKE_SOURCE_DIR}/InstallerResources/Readme.txt)
set (CPACK_RESOURCE_FILE_WELCOME ${CMAKE_SOURCE_DIR}/InstallerResources/Welcome.txt)

set (CPACK_OSX_PACKAGE_VERSION 10.5) # osxfuse needs at least Leopard
set (CPACK_PREFLIGHT_SCRIPT ${CMAKE_SOURCE_DIR}/InstallerResources/pkg/preinstall.sh)

set (CPACK_DEBIAN_PACKAGE_DEPENDS "autofs,chkconfig")
set (CPACK_DEBIAN_PACKAGE_BUILDS_DEPENDS "build-essential,cmake,libfuse-dev,libssl-dev")

set (CPACK_SET_DESTDIR "ON") 

include (CPack)

add_custom_target(dist COMMAND ${CMAKE_MAKE_PROGRAM} package_source)
